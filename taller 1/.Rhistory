)
n_datos1$INR <- ifelse(n_datos1$PERIODO == '2012' |
n_datos1$PERIODO == '2013' |
n_datos1$PERIODO == '2014' |
n_datos1$PERIODO == '2015',
rescale(x = n_datos1$IN, mean = 150, sd = 30, df = T)[,1],n_datos$IN
)
ggplot(data = n_datos1, aes(x =(as.character(PERIODO)) , y = INR)) +
geom_boxplot() + theme_test() + labs(x="Periodo")+
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none')
#)
n_datos1$INR <- ifelse(n_datos1$PERIODO == '2012' |
n_datos1$PERIODO == '2013' |
n_datos1$PERIODO == '2014' |
n_datos1$PERIODO == '2015',
rescale(x = n_datos1$IN, mean = 150, sd = 30, df = T)[,1],n_datos$IN
)
ggplot(data = n_datos1, aes(x =(as.character(PERIODO)) , y = INR)) +
geom_boxplot() + theme_test() + labs(x="Periodo")+
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none')
ggplot(data = n_datos1, aes(x =(as.character(PERIODO)) , y = INR)) +
geom_boxplot() + theme_test() + labs(x="Periodo")+
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none')
n_datos1$INR <- ifelse(n_datos1$PERIODO == '2012' |
n_datos1$PERIODO == '2013' |
n_datos1$PERIODO == '2014' |
n_datos1$PERIODO == '2015',
rescale(x = n_datos1$IN, mean = 150, sd = 30, df = T)[,1],n_datos$INR
)
n_datos1$INR <- ifelse(n_datos1$PERIODO == '2012' |
n_datos1$PERIODO == '2013' |
n_datos1$PERIODO == '2014' |
n_datos1$PERIODO == '2015',
rescale(x = n_datos1$INR, mean = 150, sd = 30, df = T)[,1],n_datos$INR
)
n_datos1$INR <- ifelse(n_datos1$PERIODO == '2012' |
n_datos1$PERIODO == '2013' |
n_datos1$PERIODO == '2014' |
n_datos1$PERIODO == '2015',
rescale(x = n_datos1$IN, mean = 150, sd = 30, df = T)[,1],n_datos$IN
)
ggplot(data = n_datos1, aes(x =(as.character(PERIODO)) , y = INR)) +
geom_boxplot() + theme_test() + labs(x="Periodo")+
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none')
ggplot(data = n_datos1, aes(x =(as.character(PERIODO)) , y = INR)) +
geom_boxplot() + theme_test() + labs(x="Periodo")+
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none')
n_datos1
n_datos
n_datos1$INR <- ifelse(n_datos1$PERIODO == '2012' |
n_datos1$PERIODO == '2013' |
n_datos1$PERIODO == '2014' |
n_datos1$PERIODO == '2015',
rescale(x = n_datos1$IN, mean = 150, sd = 30, df = T)[,1],n_datos$IN
)
ggplot(data = n_datos1, aes(x =(as.character(PERIODO)) , y = INR)) +
geom_boxplot() + theme_test() + labs(x="Periodo")+
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none')
#clasificar los datos de los evaluados desde el 2012 hasta el 2018
install.packages('magrittr')
install.packages('dplyr')
library(magrittr) # Contiene la función select
library(dplyr) # Permite leer la función %>%
datos <-  saber_pro %>% select(CODMPIO,GENERO,PERIODO,LC,IN) %>% filter(substring(saber_pro$CODMPIO,1,2)==68)
datos
#muestreo aleatorio simple
library(samplingbook) # llamamos la librería
# muestra aleatoria simple para los datos LC
MAS <- sample.size.mean(e=0.5, S=sd(datos$LC), N = nrow(datos), level = 0.95)
Mas <- sample.size.mean(e=0.5,S=sd(datos$IN),N=nrow(datos),level = 0.95)
#muestra
muestra<- sample(1:nrow(datos),size=MAS$n,replace=FALSE)
head(muestra)
n_datos <-datos[muestra,]
head(n_datos)
muestra1=sample(1:nrow(datos),size = Mas$n,replace = FALSE)
head(muestra)
n_datos1 <-datos[muestra1,]
head(n_datos1)
#Graficas
install.packages("devtools")
devtools::install_github("IRkernel/repr")
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
plots <- c(list(...), plotlist)
numPlots = length(plots)
if (is.null(layout)) {
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
for (i in 1:numPlots) {
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
# para Redimensionar el espacio gráfico en esta aplicación, no se require en el software
install.packages('repr')
library(repr)
options(repr.plot.width=16, repr.plot.height=8)
install.packages('ggplot2')
library(ggplot2)
install.packages('psych')
library(psych)
n_datos$LCR <- ifelse(n_datos$PERIODO == '2012' |
n_datos$PERIODO == '2013' |
n_datos$PERIODO == '2014' |
n_datos$PERIODO == '2015',
rescale(x = n_datos$LC, mean = 150, sd = 30, df = T)[,1],n_datos$LC
)
library(ggplot2)
#multiplot(
ggplot(data = n_datos, aes(x =(as.character(PERIODO)) , y = LCR)) +
geom_boxplot() + theme_test() + labs(x="Periodo")+
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none')
#)
PROM<-aggregate(LC~PERIODO,data=n_datos,FUN=mean)
PROM$LCR <- ifelse(PROM$PERIODO == '2012' |
PROM$PERIODO == '2013' |
PROM$PERIODO == '2014' |
PROM$PERIODO == '2015',
rescale(x = PROM$LC, mean = 150, sd = 30, df = T)[,1],PROM$LC
)
ggplot(data = PROM, aes(x = (as.character(PERIODO)),y=LCR)) + geom_bar(stat="identity") + theme_test() +labs(x="Periodo")+
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none')
ggplot(data = n_datos, aes(x = LCR)) + geom_histogram(bins = 50) + facet_wrap(~GENERO) + theme_test() +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none')
n_datos1$INR <- ifelse(n_datos1$PERIODO == '2012' |
n_datos1$PERIODO == '2013' |
n_datos1$PERIODO == '2014' |
n_datos1$PERIODO == '2015',
rescale(x = n_datos1$IN, mean = 150, sd = 30, df = T)[,1],n_datos$IN
)
ggplot(data = n_datos1, aes(x =(as.character(PERIODO)) , y = INR)) +
geom_boxplot() + theme_test() + labs(x="Periodo")+
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none')
#)
ggplot(data = PROM, aes(x = (as.character(PERIODO)),y=LCR)) + geom_bar(stat="identity") + theme_test() +labs(x="Periodo")+
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none')
PROM1<-aggregate(IN~PERIODO,data=n_datos1,FUN=mean)
PROM1$INR <- ifelse(PROM$PERIODO == '2012' |
PROM$PERIODO == '2013' |
PROM$PERIODO == '2014' |
PROM$PERIODO == '2015',
rescale(x = PROM1$IN, mean = 150, sd = 30, df = T)[,1],PROM1$IN
)
ggplot(data = PROM1, aes(x = (as.character(PERIODO)),y=INR)) + geom_bar(stat="identity") + theme_test() +labs(x="Periodo")+
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none')
ggplot(data = n_datos1, aes(x = INR)) + geom_histogram(bins = 50) + facet_wrap(~GENERO) + theme_test() +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none')
#Eagregamos una nueva columna con el departamento
datos$CODMPIO <- as.character(datos$CODMPIO)
nchar(datos$CODMPIO)
#Volvemos las cadenas de la misma longitud
datos$CODDEPTO <- ifelse(nchar(datos$CODMPIO)==4,
paste("0", datos$CODMPIO, sep = ""),
datos$CODMPIO)
datos$CODDEPTO <- substr(datos$CODDEPTO, start = 1, stop = 2)
#Le añadimos el nombre al departamento segun su codigo
datos$DEPTO <- ifelse(datos$CODDEPTO == '05',
gsub('05','Antioquia', datos$CODDEPTO),
datos$CODDEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '08',
gsub('08', "Atlantico", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '11',
gsub('11', "Bogota D.C.", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '13',
gsub('13', "Bolivar.", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '15',
gsub('15', "Boyaca", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '17',
gsub('17', "Caldas", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '18',
gsub('18', "Caqueta", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '19',
gsub('19', "Cauca", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '20',
gsub('20', "Cesar", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '23',
gsub('23', "Cordoba", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '25',
gsub('25', "Cundinamarca", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '27',
gsub('27', "Choco", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '41',
gsub('41', "Huila", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '44',
gsub('44', "La Guajira", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '47',
gsub('47', "Magdalena", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '50',
gsub('50', "Meta", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '52',
gsub('52', "Nariño", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '54',
gsub('54', "Norte de Santander", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '63',
gsub('63', "Quindio", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '66',
gsub('66', "Risaralda", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '68',
gsub('68', "Santander", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '70',
gsub('70', "Sucre", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '73',
gsub('73', "Tolima", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '76',
gsub('76', "Valle", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '81',
gsub('81', "Arauca", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '85',
gsub('85', "Casanare", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '86',
gsub('86', "Putumayo", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '91',
gsub('91', "Amazonas", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '94',
gsub('94', "Guainia", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '95',
gsub('95', "Guaviare", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '97',
gsub('97', "Vaupes", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '99',
gsub('99', "Vichada", datos$CODDEPTO),
datos$DEPTO)
datos$DEPTO <- ifelse(datos$CODDEPTO == '88',
gsub('88', "San Andres", datos$CODDEPTO),
datos$DEPTO)
datos <- datos %>%
mutate_if(is.character,factor)
library(ggplot2)
datos
#Insesgamiento
mues <- n_datos$LC
n <- length(mues)
varmedia <- (1/(n^2)) * sum((mues - mean(mues))^2)
#desviacion
desvmedia <- sqrt(varmedia)
B <- 1e+04
media <- numeric(B)
mediana <- numeric(B)
for (k in 1:B) {
remuestra <- sample(mues, n, replace = TRUE)
media[k] <- mean(remuestra)
# remordenada <- sort(remuestra)
# mediana[k] <- remordenada[8]
mediana[k] <- median(remuestra)
}
sesgomediaboot <- mean(media) - mean(mues)
sesgomedianaboot <- mean(mediana) - median(mues)
muestra_1<- sample(1:nrow(n_datos),size=10,replace=FALSE)
n_datos_1 <- grados[muestra_1,]
muestra_2<- sample(1:nrow(n_datos),size=100,replace=FALSE)
n_datos_2 <- grados[muestra_2,]
muestra_3<- sample(1:nrow(n_datos),size=1000,replace=FALSE)
n_datos_3 <- grados[muestra_3,]
multiplot(
ggplot(data = n_datos, aes(x = LC)) + geom_histogram(bins = 50) + theme_test() + ggtitle('Población') +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none'),
ggplot(data = n_datos_1, aes(x = LC)) + geom_histogram(bins = 50) + theme_test() + ggtitle('n = 10') +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none'),
ggplot(data = n_datos_2, aes(x = LC)) + geom_histogram(bins = 50) + theme_test() + ggtitle('n = 100') +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none'),
ggplot(data = n_datos_3, aes(x = LC)) + geom_histogram(bins = 50) + theme_test() + ggtitle('n = 1000') +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none'),
cols = 2)
muestra_1<- sample(1:nrow(n_datos),size=10,replace=FALSE)
n_datos_1 <- n_datos[muestra_1,]
muestra_2<- sample(1:nrow(n_datos),size=100,replace=FALSE)
n_datos_2 <- n_datos[muestra_2,]
muestra_3<- sample(1:nrow(n_datos),size=1000,replace=FALSE)
n_datos_3 <- n_datos[muestra_3,]
multiplot(
ggplot(data = n_datos, aes(x = LC)) + geom_histogram(bins = 50) + theme_test() + ggtitle('Población') +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none'),
ggplot(data = n_datos_1, aes(x = LC)) + geom_histogram(bins = 50) + theme_test() + ggtitle('n = 10') +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none'),
ggplot(data = n_datos_2, aes(x = LC)) + geom_histogram(bins = 50) + theme_test() + ggtitle('n = 100') +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none'),
ggplot(data = n_datos_3, aes(x = LC)) + geom_histogram(bins = 50) + theme_test() + ggtitle('n = 1000') +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none'),
cols = 2)
multiplot(
ggplot(data = n_datos, aes(x = LCR)) + geom_histogram(bins = 50) + theme_test() + ggtitle('Población') +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none'),
ggplot(data = n_datos_1, aes(x = LCR)) + geom_histogram(bins = 50) + theme_test() + ggtitle('n = 10') +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none'),
ggplot(data = n_datos_2, aes(x = LCR)) + geom_histogram(bins = 50) + theme_test() + ggtitle('n = 100') +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none'),
ggplot(data = n_datos_3, aes(x = LCR)) + geom_histogram(bins = 50) + theme_test() + ggtitle('n = 1000') +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none'),
cols = 2)
muestra_1
muestra_3
n_datos_1
n_datos
n_datos1
mues <- n_datos$IN
n <- length(mues)
varmedia <- (1/(n^2)) * sum((mues - mean(mues))^2)
#desviacion
desvmedia <- sqrt(varmedia)
B <- 1e+04
media <- numeric(B)
mediana <- numeric(B)
for (k in 1:B) {
remuestra <- sample(mues, n, replace = TRUE)
media[k] <- mean(remuestra)
# remordenada <- sort(remuestra)
# mediana[k] <- remordenada[8]
mediana[k] <- median(remuestra)
}
sesgomediaboot <- mean(media) - mean(mues)
sesgomedianaboot <- mean(mediana) - median(mues)
muestra_1<- sample(1:nrow(n_datos1),size=10,replace=FALSE)
n_datos_1 <- n_datos1[muestra_1,]
muestra_2<- sample(1:nrow(n_datos1),size=100,replace=FALSE)
n_datos_2 <- n_datos1[muestra_2,]
muestra_3<- sample(1:nrow(n_datos1),size=1000,replace=FALSE)
n_datos_3 <- n_datos1[muestra_3,]
multiplot(
ggplot(data = n_datos1, aes(x = INR)) + geom_histogram(bins = 50) + theme_test() + ggtitle('Población') +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none'),
ggplot(data = n_datos_1, aes(x = INR)) + geom_histogram(bins = 50) + theme_test() + ggtitle('n = 10') +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none'),
ggplot(data = n_datos_2, aes(x = INR)) + geom_histogram(bins = 50) + theme_test() + ggtitle('n = 100') +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none'),
ggplot(data = n_datos_3, aes(x = INR)) + geom_histogram(bins = 50) + theme_test() + ggtitle('n = 1000') +
theme(axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = 'none'),
cols = 2)
n_datos
